{#
/**
 * @file
 * Default theme implementation for displaying a view as a table.
 *
 * Available variables:
 * - attributes: Remaining HTML attributes for the element.
 *   - class: HTML classes that can be used to style contextually through CSS.
 * - title : The title of this group of rows.
 * - header: The table header columns.
 *   - attributes: Remaining HTML attributes for the element.
 *   - content: HTML classes to apply to each header cell, indexed by
 *   the header's key.
 *   - default_classes: A flag indicating whether default classes should be
 *     used.
 * - caption_needed: Is the caption tag needed.
 * - caption: The caption for this table.
 * - accessibility_description: Extended description for the table details.
 * - accessibility_summary: Summary for the table details.
 * - rows: Table row items. Rows are keyed by row number.
 *   - attributes: HTML classes to apply to each row.
 *   - columns: Row column items. Columns are keyed by column number.
 *     - attributes: HTML classes to apply to each column.
 *     - content: The column content.
 *   - default_classes: A flag indicating whether default classes should be
 *     used.
 * - responsive: A flag indicating whether table is responsive.
 * - sticky: A flag indicating whether table header is sticky.
 *
 * @see template_preprocess_views_view_table()
 *
 * @ingroup themeable
 */
#}
{%
set classes = [
'cols-' ~ header|length,
responsive ? 'responsive-enabled',
sticky ? 'sticky-enabled',
"table table-striped",
'footable footable-1 breakpoint breakpoint-lg'
]
%}

{{ attach_library('myadmin/bootstrap_css') }}


<style>
  .footable-details th{
    display:none!important;
  }
  .table-striped>tbody>tr:nth-of-type(odd)>* {
    --bs-table-bg-type: #fff;
  }
  .details-commande{
    background-color: #e0f2fd !important;
    padding: 15px;
  }
  .commande-header{
     padding-bottom: 10px;
     margin:0px;
  }
  .commande-body{
    border-top: 1px dashed;
    padding: 10px;
  }
  .commande-th{
       padding-left: 10px;
  }
  .badge-paid {
    background: #28a745;
  }
  .badge-cancel {
    background: #6c6c6c;
  }
  .badge {
    display: inline-block;
    font-weight: 700;
    border-radius: 0.375rem;
    text-align: center;
    padding: 0.35em 0.65em;
    white-space: nowrap;
    color: #fff;
    text-align: center;
}
.badge-unpaid {
    background: #d2322d;
}
</style>
{{ attach_library('myadmin/icon_awesome') }}

{{ attach_library('myadmin/commande_js') }}


		<table id="table1"  
        data-detail-view="true" 
        data-detail-formatter="detailFormatter" 
        data-search="true"  
        data-show-footer="true" 
        data-search-align="left" 
        data-pagination="true">
						<thead>
							<tr>
								<th data-field="id" data-visible="false">ID</th>
								<th data-field="ref">REF</th>
								<th data-field="date" data-formatter="dateFormatter">Date</th>
                                <th data-field="client" >Client</th>                    
                                <th data-field="total_achat" data-formatter="priceValueFormatter" data-footer-formatter="total_achatFormatter">Total Achat</th>
                                <th data-field="price" data-formatter="priceValueFormatter" data-footer-formatter="priceFormatter">Total vente</th>
                                <th data-field="status" data-formatter="statusFormatter">Status commande</th>
                                <th data-formatter="operateFormatter"></th>
							</tr>
						</thead> 
	  </table>
<script>
   	  var data = 
							[
				            {% for item in rows %}
                            {% set com = item.content["#row"]._entity %}
									{% set n = node_parser(com) %}        
				                           	{
				                                "id": "{{n.nid}}",
				                                "ref": "{{n.title}}",
											    "date": "{{n.field_date}}",
                                                "client": "{{n.field_client.title}}",
                                                "status": "{{n.field_status}}",
                                                "status": "{{n.field_status}}",
				                                "price": "{{n.field_total_vente}}",
				                                "total_achat": "{{n.field_total_achat}}"
				                            },
				                   {% endfor %}
							]
     function priceValueFormatter(value) {
        return new Intl.NumberFormat('en-DE').format(value) ;
    }
     function priceFormatter(data) {
        
        var field = this.field
        my_total = data.map(function (row) {
            return +row[field]
        }).reduce(function (sum, i) {
            return sum + i
        }, 0)
        return new Intl.NumberFormat('en-DE').format(my_total)+ " AR" ;
    }
    function total_achatFormatter(data) {
        var field = this.field
        my_total = data.map(function (row) {
            return +row[field]
        }).reduce(function (sum, i) {
            return sum + i
        }, 0)
        return new Intl.NumberFormat('en-DE').format(my_total)+ " AR";
    }
    function dateFormatter(value) {
        const date = new Date(value);
        const options = { 
            weekday: 'long', 
            year: 'numeric', 
            month: 'long', 
            day: 'numeric' 
            };
        const formatter = new Intl.DateTimeFormat('fr-FR', options);

       return formatter.format(date);
    }
    function clientFormatter(value) {
       if (value != "INCONNUE"){
        return value ;
       }
    }
    function statusFormatter(value) {
       if(value == "unpayed"){
         return "<span class='badge badge-unpaid'> En Attente de paiement </span>";
       }
       if(value == "cancel"){
         return "<span class='badge badge-cancel'> Commande annulée </span>";
       }
       if(value == "paid"){
         return "<span class='badge badge-paid'>  Commande payé  </span>";
       }
    }
       function operateFormatter(value, row, index) {
                            return [
                                '<a class="remove" href="/node/'+row['id']+'?destination=/admin/commandes" title="Edit">',
                                '<i class="fa fa-edit"></i> Modifié',
                                '</a>'
                                ].join('')
       }

        function detailFormatter(index, row) {
          var html = [];
          return "<h1>HELLO</h1>";
        }
  


</script>
